"""Reflexion prompts and fewshot examples selector."""

from agential.base.selector import BaseSelector
from agential.cog.reflexion.prompts import (
    # Few-shots.
    HOTPOTQA_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    TRIVIAQA_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    AMBIGNQ_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    FEVER_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    GSM8K_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    SVAMP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    TABMWP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    HUMANEVAL_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    MBPP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    HOTPOTQA_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    TRIVIAQA_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    AMBIGNQ_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    FEVER_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    GSM8K_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    SVAMP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    TABMWP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    HUMANEVAL_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    MBPP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    # Instructions.
    REFLEXION_COT_REFLECT_INSTRUCTION_HOTPOTQA,
    REFLEXION_COT_INSTRUCTION_HOTPOTQA,
    REFLEXION_REACT_INSTRUCTION_HOTPOTQA,
    REFLEXION_REACT_REFLECT_INSTRUCTION_HOTPOTQA,
    REFLEXION_COT_REFLECT_INSTRUCTION_TRIVIAQA,
    REFLEXION_COT_INSTRUCTION_TRIVIAQA,
    REFLEXION_REACT_INSTRUCTION_TRIVIAQA,
    REFLEXION_REACT_REFLECT_INSTRUCTION_TRIVIAQA,
    REFLEXION_COT_REFLECT_INSTRUCTION_AMBIGNQ,
    REFLEXION_COT_INSTRUCTION_AMBIGNQ,
    REFLEXION_REACT_INSTRUCTION_AMBIGNQ,
    REFLEXION_REACT_REFLECT_INSTRUCTION_AMBIGNQ,
    REFLEXION_COT_REFLECT_INSTRUCTION_FEVER,
    REFLEXION_COT_INSTRUCTION_FEVER,
    REFLEXION_REACT_INSTRUCTION_FEVER,
    REFLEXION_REACT_REFLECT_INSTRUCTION_FEVER,
    REFLEXION_COT_REFLECT_INSTRUCTION_GSM8K,
    REFLEXION_COT_INSTRUCTION_GSM8K,
    REFLEXION_REACT_INSTRUCTION_GSM8K,
    REFLEXION_REACT_REFLECT_INSTRUCTION_GSM8K,
    REFLEXION_COT_REFLECT_INSTRUCTION_SVAMP,
    REFLEXION_COT_INSTRUCTION_SVAMP,
    REFLEXION_REACT_INSTRUCTION_SVAMP,
    REFLEXION_REACT_REFLECT_INSTRUCTION_SVAMP,
    REFLEXION_COT_REFLECT_INSTRUCTION_TABMWP,
    REFLEXION_COT_INSTRUCTION_TABMWP,
    REFLEXION_REACT_INSTRUCTION_TABMWP,
    REFLEXION_REACT_REFLECT_INSTRUCTION_TABMWP,
    REFLEXION_COT_REFLECT_INSTRUCTION_HUMANEVAL,
    REFLEXION_COT_INSTRUCTION_HUMANEVAL,
    REFLEXION_REACT_INSTRUCTION_HUMANEVAL,
    REFLEXION_REACT_REFLECT_INSTRUCTION_HUMANEVAL,
    REFLEXION_COT_REFLECT_INSTRUCTION_MBPP,
    REFLEXION_COT_INSTRUCTION_MBPP,
    REFLEXION_REACT_INSTRUCTION_MBPP,
    REFLEXION_REACT_REFLECT_INSTRUCTION_MBPP,
)
from agential.fewshots.manager import Benchmarks


REFLEXION_COT_PROMPTS = {
        Benchmarks.qa.HOTPOTQA: {
            "prompt": REFLEXION_COT_INSTRUCTION_HOTPOTQA,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_HOTPOTQA,
        },
        Benchmarks.qa.FEVER: {
            "prompt": REFLEXION_COT_INSTRUCTION_FEVER,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_FEVER,
        },
        Benchmarks.qa.TRIVIAQA: {
            "prompt": REFLEXION_COT_INSTRUCTION_TRIVIAQA,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_TRIVIAQA,
        },
        Benchmarks.qa.AMBIGNQ: {
            "prompt": REFLEXION_COT_INSTRUCTION_AMBIGNQ,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_AMBIGNQ,
        },
        Benchmarks.math.GSM8K: {
            "prompt": REFLEXION_COT_INSTRUCTION_GSM8K,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_GSM8K,
        },
        Benchmarks.math.SVAMP: {
            "prompt": REFLEXION_COT_INSTRUCTION_SVAMP,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_SVAMP,
        },
        Benchmarks.math.TABMWP: {
            "prompt": REFLEXION_COT_INSTRUCTION_TABMWP,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_TABMWP,
        },
        Benchmarks.code.HUMANEVAL: {
            "prompt": REFLEXION_COT_INSTRUCTION_HUMANEVAL,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_HUMANEVAL,
        },
        Benchmarks.code.MBPP: {
            "prompt": REFLEXION_COT_INSTRUCTION_MBPP,
            "reflect_prompt": REFLEXION_COT_REFLECT_INSTRUCTION_MBPP,
        },
}
REFLEXION_REACT_PROMPTS = {
        Benchmarks.qa.HOTPOTQA: {
            "prompt": REFLEXION_REACT_INSTRUCTION_HOTPOTQA,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_HOTPOTQA,
        },
        Benchmarks.qa.FEVER: {
            "prompt": REFLEXION_REACT_INSTRUCTION_FEVER,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_FEVER,
        },
        Benchmarks.qa.TRIVIAQA: {
            "prompt": REFLEXION_REACT_INSTRUCTION_TRIVIAQA,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_TRIVIAQA,
        },
        Benchmarks.qa.AMBIGNQ: {
            "prompt": REFLEXION_REACT_INSTRUCTION_AMBIGNQ,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_AMBIGNQ,
        },
        Benchmarks.math.GSM8K: {
            "prompt": REFLEXION_REACT_INSTRUCTION_GSM8K,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_GSM8K,
        },
        Benchmarks.math.SVAMP: {
            "prompt": REFLEXION_REACT_INSTRUCTION_SVAMP,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_SVAMP,
        },
        Benchmarks.math.TABMWP: {
            "prompt": REFLEXION_REACT_INSTRUCTION_TABMWP,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_TABMWP,
        },
        Benchmarks.code.HUMANEVAL: {
            "prompt": REFLEXION_REACT_INSTRUCTION_HUMANEVAL,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_HUMANEVAL,
        },
        Benchmarks.code.MBPP: {
            "prompt": REFLEXION_REACT_INSTRUCTION_MBPP,
            "reflect_prompt": REFLEXION_REACT_REFLECT_INSTRUCTION_MBPP,
        },
}

REFLEXION_COT_FEWSHOTS = {
    Benchmarks.HOTPOTQA: HOTPOTQA_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.TRIVIAQA: TRIVIAQA_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.AMBIGNQ: AMBIGNQ_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.FEVER: FEVER_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.GSM8K: GSM8K_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.SVAMP: SVAMP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.TABMWP: TABMWP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.HUMANEVAL: HUMANEVAL_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
    Benchmarks.MBPP: MBPP_FEWSHOT_EXAMPLES_REFLEXION_COT_REFLECT,
},
REFLEXION_REACT_FEWSHOTS = {
    Benchmarks.HOTPOTQA: HOTPOTQA_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.TRIVIAQA: TRIVIAQA_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.AMBIGNQ: AMBIGNQ_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.FEVER: FEVER_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.GSM8K: GSM8K_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.SVAMP: SVAMP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.TABMWP: TABMWP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.HUMANEVAL: HUMANEVAL_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
    Benchmarks.MBPP: MBPP_FEWSHOT_EXAMPLES_REFLEXION_REACT_REFLECT,
},


class ReActSelector(BaseSelector):
    @staticmethod
    def get_fewshots(self) -> str:
        return ""

    @staticmethod
    def get_prompt(self, benchmark: str) -> str:
        if benchmark not in REACT_PROMPTS:
            raise ValueError(f"Benchmark '{benchmark}' not supported for ReAct.")

        return REACT_PROMPTS[benchmark]